<?xml version="1.0" encoding="UTF-8"?>
<!--
Project:Easy Web Framework

Description: This project is based on much more open source projects than ever before,
             and can be applied to mostly web development environment.
Author:hezhiping   Email:110476592@qq.com

=============================================================================================

-->

<project name="security Component" default="jar" basedir=".">
    <import file="../../common.xml"/>

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->

    <property environment="env"/>
    <property name="desc" value="security Component"/>
    <property name="name" value="security"/>
    <property name="component-name" value="security"/>
    <property name="easyfk.home.dir" value="../.."/>
    <property name="src.dir" value="src"/>
    <property name="dtd.dir" value="dtd"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="build"/>

    <path id="local.class.path">
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="../../core/base/lib" includes="*.jar"/>
        <fileset dir="../../core/entity/lib" includes="*.jar"/>
    	<fileset dir="../../core/entity/build/lib" includes="*.jar"/>
    	<fileset dir="../../core/base/lib/commons" includes="*.jar"/>
        <fileset dir="../../core/base/lib/j2eespecs" includes="*.jar"/>
        <fileset dir="../../core/base/build/lib" includes="*.jar"/>
   </path>

    <!-- ================================================================= -->
    <!-- Targets to create  patch files                                    -->
    <!-- ================================================================= -->

    <target name="create-patches" description="Creates patches for root, core, application and baseapps components">
        <exec executable="svn" output="patches/root.patch" dir="${easyfk.home.dir}">
            <arg value="diff"/>
            <arg value="--depth=files"/>
        </exec>
        <exec executable="svn" output="patches/core.patch" dir="${easyfk.home.dir}">
            <arg value="diff"/>
            <arg value="core"/>
        </exec>
        <exec executable="svn" output="patches/baseapps.patch" dir="${easyfk.home.dir}">
            <arg value="diff"/>
            <arg value="baseapps"/>
        </exec>
        <exec executable="svn" output="patches/baseapps.patch" dir="${easyfk.home.dir}">
            <arg value="diff"/>
            <arg value="baseapps"/>
        </exec>
        <!-- this allow to work correctly on Windows machines without issues on Linux machines -->
        <fixcrlf srcdir="patches" includes="**/*.patch" eol="crlf" />
    </target>

    <target name="revert-patches" description="Remove any local change in the files or any previously applied local patch.">
        <exec executable="svn" dir="${easyfk.home.dir}">
            <arg value="revert"/>
          <arg value="--depth=files"/>
            <arg value="${easyfk.home.dir}"/>
        </exec>
        <exec executable="svn" dir="${easyfk.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="core"/>
        </exec>
        <exec executable="svn" dir="${easyfk.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="baseapps"/>
        </exec>
        <exec executable="svn" dir="${easyfk.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="baseapps"/>
        </exec>
    </target>

    <target name="apply-patches" description="Apply the patches to root, core, application and baseapps components.">
        <fail message="Patch files not found.">
            <condition>
                <or>
                    <not><isset property="component-name"/></not>
                    <not>
                        <resourcecount count="3" when="gt">
                            <fileset dir="patches" includes="*.patch"/>
                        </resourcecount>
                    </not>
                </or>
            </condition>
        </fail>
        <patch strip="0" patchfile="patches/root.patch" dir="${easyfk.home.dir}" failonerror="true"/>
        <patch strip="0" patchfile="patches/core.patch" dir="${easyfk.home.dir}" failonerror="true"/>
        <patch strip="0" patchfile="patches/baseapps.patch" dir="${easyfk.home.dir}" failonerror="true"/>
        <patch strip="0" patchfile="patches/baseapps.patch" dir="${easyfk.home.dir}" failonerror="true"/>
        <delete>          
            <fileset dir="${easyfk.home.dir}" includes="**/*.rej"/>
        </delete>
    </target>

    <target name="reapply-patches" description="First removes any previously applied patch and then applies the new patch">
        <fail message="Patch files not found.">
            <condition>
                <or>
                    <not><isset property="component-name"/></not>
                    <not>
                        <resourcecount count="3" when="gt">
                            <fileset dir="patches" includes="*.patch"/>
                        </resourcecount>
                    </not>
                </or>
            </condition>
        </fail>
        <antcall target="revert-patches"/>
        <antcall target="apply-patches"/>
    </target>
</project>
