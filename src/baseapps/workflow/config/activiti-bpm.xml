<?xml version="1.0" encoding="UTF-8"?>
<!--
   Project:Easy Web Framework
   Description:
   EasyFK stands for Easy Web Framework.It's an open source product for E-Business / E-Commerce.It
   was launched by a chinese Hezhiping(QQ:110476592) in 2015.The goal of EasyFK is to  provide a
   foundation and starting point for reliable, secure , simple-to-use ,cost-effective ,scalable
   and suitable-for-Chinese E-Business / E-Commerce solutions. With EasyFK, you can get started
   right away without the huge deployment and maintenance costs of E-Business / E-Commerce systems.
   Of course, you can customize it or use it as a framework to implement your most challenging business needs.
   EasyFk is licensed under the Apache License Version 2.0.  You may obtain a copy of the License at
   http://www.apache.org/licenses/LICENSE-2.0
   Author:hezhiping   Email:110476592@qq.com
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 注意：要启用工作流，应在要使用工作流的应用的web.xml的spring上下文件配置中加入classpath*:activiti-bpm.xml -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="processDiagramGenerator" class="org.activiti.image.impl.DefaultProcessDiagramGenerator">  </bean>
	
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="mailServerHost" value="localhost" />
		<property name="mailServerPort" value="5025" />
		<property name="jobExecutorActivate" value="false" />
		<property name="customFormTypes">
			<list>
				<bean class="org.activiti.rest.form.UserFormType" />
				<bean class="org.activiti.rest.form.ProcessDefinitionFormType" />
				<bean class="org.activiti.rest.form.MonthFormType" />
			</list>
		</property>
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>


	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService" />


	<bean id="demoService"
		class="cn.gorun8.easyfk.workflow.service.impl.DemoServiceImpl" />
</beans>