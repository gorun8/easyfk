<?xml version="1.0" encoding="UTF-8" ?>
<!--
Project:Easy Web Framework
Description:
EasyFK stands for Easy Web Framework.It's an open source product for E-Business / E-Commerce.It
was launched by a chinese Hezhiping(QQ:110476592) in 2015.The goal of EasyFK is to  provide a
foundation and starting point for reliable, secure , simple-to-use ,cost-effective ,scalable
and suitable-for-Chinese E-Business / E-Commerce solutions. With EasyFK, you can get started
right away without the huge deployment and maintenance costs of E-Business / E-Commerce systems.
Of course, you can customize it or use it as a framework to implement your most challenging business needs.
EasyFk is licensed under the Apache License Version 2.0.  You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Author:hezhiping   Email:110476592@qq.com
-->
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gorun8.easyfk.party.dao.PartyDao">


    <select id="findPartyList" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM party as pt,person as ps,party_classification as pcls
        WHERE pt.PARTY_ID = ps.PARTY_ID and pt.STATUS_ID='PARTY_ENABLED' and pcls.PARTY_ID = ps.PARTY_ID
        <if test="partyClsId != null">
           and pcls.PARTY_CLASSIFICATION_GROUP_ID = #{partyClsId}
        </if>
    </select>

    <select id="findPartyById" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM party WHERE PARTY_ID = #{partyId}
    </select>

    <insert id="createParty" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        INSERT INTO party(
        PARTY_ID,
        PARTY_TYPE_ID,
        EXTERNAL_ID,
        PREFERRED_CURRENCY_UOM_ID,
        DESCRIPTION ,
        STATUS_ID,
        CREATED_DATE,
        CREATED_BY_USER_LOGIN,
        LAST_MODIFIED_DATE,
        LAST_MODIFIED_BY_USER_LOGIN,
        DATA_SOURCE_ID,
        IS_UNREAD
        )
        VALUES (
        #{party.PARTY_ID},
        #{party.PARTY_TYPE_ID},
        #{party.EXTERNAL_ID},
        #{party.PREFERRED_CURRENCY_UOM_ID},
        #{party.DESCRIPTION},
        #{party.STATUS_ID},
        #{party.CREATED_DATE},
        #{party.CREATED_BY_USER_LOGIN},
        #{party.LAST_MODIFIED_DATE},
        #{party.LAST_MODIFIED_BY_USER_LOGIN},
        #{party.DATA_SOURCE_ID},
        #{party.IS_UNREAD}
        );

    </insert>

    <update id="saveParty" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        UPDATE party
        SET
          PARTY_TYPE_ID=#{party.PARTY_TYPE_ID},
          EXTERNAL_ID=#{party.EXTERNAL_ID},
          PREFERRED_CURRENCY_UOM_ID=#{party.PREFERRED_CURRENCY_UOM_ID},
          DESCRIPTION =#{party.DESCRIPTION},
          STATUS_ID=#{party.STATUS_ID},
          CREATED_DATE=#{party.CREATED_DATE},
          CREATED_BY_USER_LOGIN=#{party.CREATED_BY_USER_LOGIN},
          LAST_MODIFIED_DATE=#{party.LAST_MODIFIED_DATE},
          LAST_MODIFIED_BY_USER_LOGIN=#{party.LAST_MODIFIED_BY_USER_LOGIN},
          DATA_SOURCE_ID=#{party.DATA_SOURCE_ID},
          IS_UNREAD=#{party.IS_UNREAD}
        WHERE
        PARTY_ID=#{party.PARTY_ID}
    </update>


    <insert id="createPartyStatus" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        INSERT INTO party_status(STATUS_ID ,PARTY_ID,STATUS_DATE)
        VALUES (#{partyStatus.STATUS_ID},#{partyStatus.PARTY_ID},#{partyStatus.STATUS_DATE})
    </insert>

    <update id="savePartyStatus" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        UPDATE party_status
        SET STATUS_ID =#{status.STATUS_ID},STATUS_DATE  =#{status.STATUS_DATE},
        WHERE PARTY_ID =#{status.PARTY_ID}
    </update>

    <select id="findPersonById" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM person WHERE PARTY_ID = #{partyId};
    </select>

    <insert id="createPerson" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        INSERT INTO person(
          PARTY_ID
        <if test="person.SALUTATION != null">
          ,SALUTATION
        </if>
        <if test="person.FIRST_NAME != null">
          ,FIRST_NAME
        </if>

        <if test="person.MIDDLE_NAME != null">
          ,MIDDLE_NAME
        </if>
        <if test="person.LAST_NAME != null">
          ,LAST_NAME
        </if>
        <if test="person.PERSONAL_TITLE != null">
          ,PERSONAL_TITLE
        </if>
        <if test="person.SUFFIX != null">
           ,SUFFIX
        </if>
        <if test="person.NICKNAME != null">
           ,NICKNAME
        </if>
        <if test="person.FIRST_NAME_LOCAL != null">
           ,FIRST_NAME_LOCAL
        </if>
        <if test="person.MIDDLE_NAME_LOCAL != null">
           ,MIDDLE_NAME_LOCAL
        </if>
        <if test="person.LAST_NAME_LOCAL != null">
            ,LAST_NAME_LOCAL
        </if>
        <if test="person.MEMBER_ID != null">
           ,MEMBER_ID
        </if>
        <if test="person.GENDER != null">
           ,GENDER
        </if>
        <if test="person.BIRTH_DATE != null">
           ,BIRTH_DATE
        </if>
        <if test="person.COMMENTS != null">
           ,COMMENTS
        </if>
        <if test="person.CARD_ID != null">
           ,CARD_ID
        </if>
          <!-- uncomment below if necessary!
          OTHER_LOCAL=,
          PASSPORT_NUMBER=
          PASSPORT_EXPIRE_DATE=
          DECEASED_DATE=
          HEIGHT=
          WEIGHT=
          MOTHERS_MAIDEN_NAME=
          MARITAL_STATUS=
          SOCIAL_SECURITY_NUMBER=
          TOTAL_YEARS_WORK_EXPERIENCE=
          EMPLOYMENT_STATUS_ENUM_ID=
          RESIDENCE_STATUS_ENUM_ID=
          OCCUPATION=
          YEARS_WITH_EMPLOYER=
          MONTHS_WITH_EMPLOYER=
          EXISTING_CUSTOMER=
          -->
        )
        VALUES (
        #{person.PARTY_ID}
        <if test="person.SALUTATION != null">
            ,#{person.SALUTATION}
        </if>
        <if test="person.FIRST_NAME != null">
            ,#{person.FIRST_NAME}
        </if>

        <if test="person.MIDDLE_NAME != null">
            ,  #{person.MIDDLE_NAME}
        </if>
        <if test="person.LAST_NAME != null">
            ,#{person.LAST_NAME}
        </if>
        <if test="person.PERSONAL_TITLE != null">
            , #{person.PERSONAL_TITLE}
        </if>
        <if test="person.SUFFIX != null">
            ,#{person.SUFFIX}
        </if>
        <if test="person.NICKNAME != null">
            ,#{person.NICKNAME}
        </if>
        <if test="person.FIRST_NAME_LOCAL != null">
            ,#{person.FIRST_NAME_LOCAL}
        </if>
        <if test="person.MIDDLE_NAME_LOCAL != null">
            , #{person.MIDDLE_NAME_LOCAL}
        </if>
        <if test="person.LAST_NAME_LOCAL != null">
            ,#{person.LAST_NAME_LOCAL}
        </if>
        <if test="person.MEMBER_ID != null">
            ,#{person.MEMBER_ID}
        </if>
        <if test="person.GENDER != null">
            ,  #{person.GENDER}
        </if>
        <if test="person.BIRTH_DATE != null">
            ,#{person.BIRTH_DATE}
        </if>
        <if test="person.COMMENTS != null">
            ,#{person.COMMENTS}
        </if>
        <if test="person.CARD_ID != null">
            , #{person.CARD_ID}
        </if>

        <!--uncomment below if necessary!
        #{person.OTHER_LOCAL},
        #{person.PASSPORT_NUMBER},
        #{person.PASSPORT_EXPIRE_DATE},
        #{person.DECEASED_DATE},
        #{person.HEIGHT},
        #{person.WEIGHT},
        #{person.MOTHERS_MAIDEN_NAME},
        #{person.MARITAL_STATUS},
        #{person.SOCIAL_SECURITY_NUMBER},
        #{person.TOTAL_YEARS_WORK_EXPERIENCE},
        #{person.EMPLOYMENT_STATUS_ENUM_ID},
        #{person.RESIDENCE_STATUS_ENUM_ID},
        #{person.OCCUPATION},
        #{person.YEARS_WITH_EMPLOYER} ,
        #{person.MONTHS_WITH_EMPLOYER} ,
        #{person.EXISTING_CUSTOMER}
        -->
        );
    </insert>


    <update id="savePerson" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        UPDATE person
        SET
          SALUTATION=#{person.SALUTATION},
          FIRST_NAME=#{person.FIRST_NAME},
          MIDDLE_NAME=#{person.MIDDLE_NAME},
          LAST_NAME=#{person.LAST_NAME},
          PERSONAL_TITLE=#{person.PERSONAL_TITLE},
          SUFFIX=#{person.SUFFIX},
          NICKNAME=#{person.NICKNAME},
          FIRST_NAME_LOCAL=#{person.FIRST_NAME_LOCAL},
          MIDDLE_NAME_LOCAL=#{person.MIDDLE_NAME_LOCAL},
          LAST_NAME_LOCAL=#{person.LAST_NAME_LOCAL},
          MEMBER_ID=#{person.MEMBER_ID},
          GENDER =#{person.GENDER},
          BIRTH_DATE=#{person.BIRTH_DATE},
          COMMENTS=#{person.COMMENTS},
          CARD_ID=#{person.CARD_ID},
          <!-- uncomment below if necessary!
          OTHER_LOCAL=#{person.OTHER_LOCAL},
          PASSPORT_NUMBER=#{person.PASSPORT_NUMBER},
          PASSPORT_EXPIRE_DATE=#{person.PASSPORT_EXPIRE_DATE},
          DECEASED_DATE=#{person.DECEASED_DATE},
          HEIGHT=#{person.HEIGHT},
          WEIGHT=#{person.WEIGHT},
          MOTHERS_MAIDEN_NAME=#{person.MOTHERS_MAIDEN_NAME},
          MARITAL_STATUS=#{person.MARITAL_STATUS},
          SOCIAL_SECURITY_NUMBER=#{person.SOCIAL_SECURITY_NUMBER},
          TOTAL_YEARS_WORK_EXPERIENCE=#{person.TOTAL_YEARS_WORK_EXPERIENCE},
          EMPLOYMENT_STATUS_ENUM_ID=#{person.EMPLOYMENT_STATUS_ENUM_ID},
          RESIDENCE_STATUS_ENUM_ID=#{person.RESIDENCE_STATUS_ENUM_ID},
          OCCUPATION=#{person.OCCUPATION},
          YEARS_WITH_EMPLOYER=#{person.YEARS_WITH_EMPLOYER} ,
          MONTHS_WITH_EMPLOYER=#{person.MONTHS_WITH_EMPLOYER} ,
          EXISTING_CUSTOMER=#{person.EXISTING_CUSTOMER}
            -->
        WHERE
          PARTY_ID=#{person.PARTY_ID}
    </update>

    <select id="findPartyTypeById" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM party_type WHERE PARTY_TYPE_ID = #{partyTypeId};
    </select>
    <select id="findDescendantTypes" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM party_type WHERE PARENT_TYPE_ID = #{partyTypeId};
    </select>



    <select id="findPartyGroupList" parameterType="java.lang.String"   resultType="cn.gorun8.easyfk.entity.GenericValue">
        SELECT  * FROM party_group;
    </select>

    <insert id="createPartyGroup" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        INSERT INTO party_group(
        PARTY_ID,
        GROUP_NAME,
        GROUP_NAME_LOCAL,
        OFFICE_SITE_NAME,
        ANNUAL_REVENUE,
        NUM_EMPLOYEES,
        TICKER_SYMBOL,
        COMMENTS)
        VALUES (
        #{partyGroup.PARTY_ID},
        #{partyGroup.GROUP_NAME},
        #{partyGroup.GROUP_NAME_LOCAL},
        #{partyGroup.OFFICE_SITE_NAME},
        #{partyGroup.ANNUAL_REVENUE},
        #{partyGroup.NUM_EMPLOYEES},
        #{partyGroup.TICKER_SYMBOL},
        #{partyGroup.COMMENTS}
        );

    </insert>

    <update id="savePartyGroup" parameterType="cn.gorun8.easyfk.entity.GenericValue">
        UPDATE party_group
        SET
        GROUP_NAME =#{partyGroup.GROUP_NAME},
        GROUP_NAME_LOCAL =#{partyGroup.GROUP_NAME_LOCAL},
        OFFICE_SITE_NAME = #{partyGroup.OFFICE_SITE_NAME},
        ANNUAL_REVENUE =  #{partyGroup.ANNUAL_REVENUE},
        NUM_EMPLOYEES = #{partyGroup.NUM_EMPLOYEES},
        TICKER_SYMBOL = #{partyGroup.TICKER_SYMBOL},
        COMMENTS =#{partyGroup.COMMENTS}
        WHERE
        PARTY_ID =#{partyGroup.PARTY_ID}
    </update>

    <delete id="removePartyGroupByPrimaryKey" parameterType="java.lang.String">
        DELETE  FROM party_group
        WHERE   PARTY_ID =#{partyId};
    </delete>
</mapper>